# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import migrations, models
from openquakeplatform.vulnerability.models import (
    FuncDistrDTLDiscr, FuncDistrVulnCont,
    FuncDistrVulnDiscr, FuncDistrFragCont, FDS
)

def forwards_func(apps, schema_editor):
    db_alias = schema_editor.connection.alias

    for cls in [FuncDistrDTLDiscr, FuncDistrVulnCont,
                FuncDistrVulnDiscr, FuncDistrFragCont]:

        funcs = cls.objects.using(
            db_alias).all()

        for func in funcs:
            to_save = False
            if func.func_distr_shape is None:
                func.func_distr_shape = FDS.LOGNORMAL
                to_save = True
            # TODO: FIX var_val_coeff for each type of curve
            # if func.resp_var_val_coeff is None:
            #    func.resp_var_val_coeff = ";".join(
            #        "0" * int(func.data_pts_num))
            #    to_save = True
            if to_save:
                func.save()


def backwards_func(apps, schema_editor):
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('vulnerability', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(forwards_func, backwards_func),
    ]
